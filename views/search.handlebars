<aside class="search-panel">
    <form id="search-form">
        <h2>Book a Flight</h2>
        <div class="input-group">
            <label for="trip-type">Trip Type</label>
            <select id="trip-type" name="trip-type">
                <option value="oneway">One-way</option>
                <option value="roundtrip">Roundtrip</option>
                <option value="multicity">Multi-city (coming soon!)</option>
            </select>
        </div>
        <div class="input-group">
            <label for="from">From</label>
            <input type="text" id="from" name="from" placeholder="Enter departure city">
        </div>
        <div class="input-group">
            <label for="to">To</label>
            <input type="text" id="to" name="to" placeholder="Enter destination city">
        </div>
        <div class="input-group">
            <label for="depart-date">Depart Date</label>
            <input type="date" id="depart-date" name="depart-date">
        </div>
        <div class="input-group" id="return-date-group">
            <label for="return-date">Return Date</label>
            <input type="date" id="return-date" name="return-date">
        </div>
        <div id="multi-city-container"></div>
        <div class="input-group" id="passengerDropdownHolder">
            <label for="passengerDropdown">Passengers</label>
            <button type="button" id="passengerDropdown" class="passenger-btn">Select Passengers</button>
            <div class="passenger-dropdown-content" id="passengerDropdownContent" style="display:none;">
                <div class="passenger-count">
                    <label for="adults">Adults</label>
                    <button type="button" class="quantity-btn decrease">-</button>
                    <input type="number" id="adults" name="adults" value="1" min="1" readonly>
                    <button type="button" class="quantity-btn increase">+</button>
                </div>
                <div class="passenger-count">
                    <label for="children">Children</label>
                    <button type="button" class="quantity-btn decrease">-</button>
                    <input type="number" id="children" name="children" value="0" min="0" readonly>
                    <button type="button" class="quantity-btn increase">+</button>
                </div>
                <div class="passenger-count">
                    <label for="infants">Infants</label>
                    <button type="button" class="quantity-btn decrease">-</button>
                    <input type="number" id="infants" name="infants" value="0" min="0" readonly>
                    <button type="button" class="quantity-btn increase">+</button>
                </div>
            </div>
        </div>
        <div class="input-group">
            <label for="class">Class</label>
            <select id="class" name="class">
                <option value="economy">Economy</option>
                <option value="premium_economy">Premium Economy</option>
                <option value="business">Business</option>
                <option value="first_class">First Class</option>
            </select>
        </div>
        <button type="submit" class="search-btn">Search Flights</button>
    </form>
</aside>
<main class="content-panel">
    <!-- Content here will be dynamically loaded based on search results -->
    <div id="resultsContainer"></div>
</main>

<script>
document.addEventListener('DOMContentLoaded', function() {
    var tripTypeSelector = document.getElementById('trip-type');
    var multiCityContainer = document.getElementById('multi-city-container');
    tripTypeSelector.addEventListener('change', function() {
        if (this.value === 'multicity') {
            multiCityContainer.innerHTML = `
                <div class="input-group">
                    <label for="from-2">From</label>
                    <input type="text" id="from-2" placeholder="Enter additional departure city">
                </div>
                <div class="input-group">
                    <label for="to-2">To</label>
                    <input type="text" id="to-2" placeholder="Enter additional destination city">
                </div>`;
        } else {
            multiCityContainer.innerHTML = '';
        }
    });

    document.getElementById('search-form').addEventListener('submit', async function(event) {
        event.preventDefault();
        const fromCity = document.getElementById('from').value;
        const toCity = document.getElementById('to').value;
        const departDate = document.getElementById('depart-date').value;

        // Additional logic to handle dynamic passenger counts, trip type, and class selection
        const passengerCounts = {
            adults: parseInt(document.getElementById('adults').value),
            children: parseInt(document.getElementById('children').value),
            infants: parseInt(document.getElementById('infants').value)
        };
        const tripType = tripTypeSelector.value;
        const classType = document.getElementById('class').value;

        console.log("Search parameters:", { fromCity, toCity, departDate, passengerCounts, tripType, classType });  // Added console.log to inspect search parameters

        try {
            // Fetch the fromId and toId for the airports
            const fromIdResponse = await fetch(`/api/getAirportId?city=${encodeURIComponent(fromCity)}`);
            if (!fromIdResponse.ok) throw new Error('Failed to fetch fromId');
            const fromIdData = await fromIdResponse.json();
            const fromId = fromIdData.airportId;

            const toIdResponse = await fetch(`/api/getAirportId?city=${encodeURIComponent(toCity)}`);
            if (!toIdResponse.ok) throw new Error('Failed to fetch toId');
            const toIdData = await toIdResponse.json();
            const toId = toIdData.airportId;

            console.log("Airport IDs:", { fromId, toId });

            // Fetch the flights using the obtained airport IDs
            const flightResponse = await fetch(`/search-flights?fromId=${fromId}&toId=${toId}&departDate=${departDate}&passengers=${JSON.stringify(passengerCounts)}&class=${classType}&tripType=${tripType}`);
            if (!flightResponse.ok) throw new Error('Failed to fetch flight data');
            const flightResults = await flightResponse.json();
            console.log("Search results:", flightResults);  // Added console.log to inspect search results
            updateResultsDisplay(flightResults);
        } catch (error) {
            console.error('Fetch error:', error);
            const container = document.getElementById('resultsContainer');
            container.innerHTML = 'Failed to load flights.';
        }
    });

    function updateResultsDisplay(results) {
        console.log(results);
        const container = document.getElementById('resultsContainer');
        container.innerHTML = '';
        if (results.status && results.data && Array.isArray(results.data.flights)) {
            results.data.flights.forEach(flight => {
                const element = document.createElement('div');
                element.textContent = `Flight from ${flight.from} to ${flight.to} - Price: $${flight.price}`;
                container.appendChild(element);
            });
        } else {
            container.innerHTML = 'No flight results found.';
        }
    }
});
</script>


